// Generated by delombok at Sat Jun 15 00:54:48 BST 2019
package info.mintymods.mss.webapp.service.impl;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.when;
import java.time.LocalDateTime;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnit;
import org.mockito.junit.MockitoRule;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import info.mintymods.mss.webapp.domain.AccessHistory;
import info.mintymods.mss.webapp.repository.AccessHistoryRepository;
import info.mintymods.mss.webapp.service.impl.AccessHistoryServiceImpl;

public class AccessHistoryServiceImplTest {
	private static final Logger log = LoggerFactory.getLogger(AccessHistoryServiceImplTest.class);
	@Rule
	public MockitoRule mockitoRule = MockitoJUnit.rule();
	@InjectMocks
	public AccessHistoryServiceImpl loginHistoryService = new AccessHistoryServiceImpl();
	@Mock
	private AccessHistoryRepository accessHistoryRepository;
	private AccessHistory accessHistory;
	private Long id = 1L;
	private LocalDateTime loginDate = LocalDateTime.now();

	@Before
	public void before() {
		accessHistory = new AccessHistory();
		accessHistory.setId(id);
		accessHistory.setLoginDate(loginDate);
	}

	@Test
	public void testInsert() {
		when(accessHistoryRepository.save(accessHistory)).thenReturn(accessHistory);
		AccessHistory expectedAccessHistory = loginHistoryService.insert(accessHistory);
		log.debug("accessHistory : {}", expectedAccessHistory);
		assertThat("Unexpected value.", accessHistory, is(expectedAccessHistory));
	}
}
