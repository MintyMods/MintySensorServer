// Generated by delombok at Sat Jun 15 00:54:48 BST 2019
package info.mintymods.mss.webapp.form;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import info.mintymods.mss.webapp.form.SignupForm;

public class SignupFormTest extends FormValidationTestBase {
	private static final Logger log = LoggerFactory.getLogger(SignupFormTest.class);
	private static ValidatorFactory validatorFactory;
	private static Validator validator;
	private String validId = "test";
	private String validName = "test";
	private String validEmail = "test@test.com";
	private String validPassword = "Password123!";

	@BeforeClass
	public static void beforeClass() {
		validatorFactory = Validation.buildDefaultValidatorFactory();
		validator = validatorFactory.getValidator();
	}

	@AfterClass
	public static void afterClass() {
		validatorFactory.close();
	}

	@Test
	public void testValidation() {
//		testValidation(new SignupForm(validId, validName, validEmail, validPassword), 0);
	}

	private Set<ConstraintViolation<SignupForm>> testValidation(SignupForm signupForm, int expectedViolationCount) {
		Set<ConstraintViolation<SignupForm>> violations = validator.validate(signupForm);
		log.debug("Violations : {}", violations);
		assertThat("Validation test failed. SignupForm = " + signupForm, violations.size(), is(0));
		return violations;
	}
}
